<div class="chapter-reader">
  <div class="chapter-header">
    <div class="breadcrumb">
      <a href="/story">Stories</a> >
      <a href="/story/<%= story.username %>/<%= story.vanity %>"><%= story.title %></a> >
      Chapter <%= chapter.chapter_num %>
    </div>
    <h1><% if (chapter.title) { %><%= chapter.title %><% } else { %>Chapter <%= chapter.chapter_num %><% } %></h1>
    <p class="story-title">from <strong><%= story.title %></strong> by <%= story.username %></p>
  </div>
  <div class="chapter-navigation">
    <% if (prevChapter) { %><a href="/story/<%= story.username %>/<%= story.vanity %>/chapter/<%= prevChapter.chapter_num %>" class="nav-button prev">← Previous Chapter</a><% } %>
    <a href="/story/<%= story.username %>/<%= story.vanity %>" class="nav-button contents">Table of Contents</a>
    <% if (nextChapter) { %><a href="/story/<%= story.username %>/<%= story.vanity %>/chapter/<%= nextChapter.chapter_num %>" class="nav-button next">Next Chapter →</a><% } %>
  </div>
  <div class="chapter-content"><%- chapter.formattedContent %></div>
  <div class="chapter-navigation">
    <% if (prevChapter) { %><a href="/story/<%= story.username %>/<%= story.vanity %>/chapter/<%= prevChapter.chapter_num %>" class="nav-button prev">← Previous Chapter</a><% } %>
    <a href="/story/<%= story.username %>/<%= story.vanity %>" class="nav-button contents">Table of Contents</a>
    <% if (nextChapter) { %><a href="/story/<%= story.username %>/<%= story.vanity %>/chapter/<%= nextChapter.chapter_num %>" class="nav-button next">Next Chapter →</a><% } %>
  </div>
  <div class="chapter-info">
    <p>Published: <%= new Date(chapter.created_at).toLocaleDateString() %></p>
  </div>
  <%- include('partials/comments-section', { story: story, chapter: chapter }) %>
</div>
<script>
  $(function() {
    const ss = sessionStorage;
    const scrollToEl = (el) =>
      el?.scrollIntoView({
        behavior: 'smooth',
        block: 'center'
      });

    const restoreScroll = () => {
      const targetId = ss.getItem('targetCommentId');
      const scrollPos = ss.getItem('scrollPosition');

      if (targetId) {
        const el = $(`[data-comment-id="${targetId}"]`)[0];
        if (el) {
          setTimeout(() => {
            scrollToEl(el);
            ['targetCommentId', 'commentOffset', 'scrollPosition'].forEach(ss.removeItem.bind(ss));
          }, 200);
          return;
        }
      }
      if (scrollPos) {
        setTimeout(() => {
          window.scrollTo(0, +scrollPos);
          ss.removeItem('scrollPosition');
        }, 100);
      }
    };

    const saveScroll = (commentId) => {
      ss.setItem('scrollPosition', window.scrollY);
      const el = $(`[data-comment-id="${commentId}"]`)[0];
      if (el) {
        ss.setItem('targetCommentId', commentId);
        ss.setItem('commentOffset', el.offsetTop);
      }
    };

    if (window.location.hash) {
      setTimeout(() => {
        scrollToEl(document.getElementById(window.location.hash.slice(1)));
      }, 100);
    } else {
      restoreScroll();
    }

    $(document).on('submit', 'form', function() {
      const $c = $(this).closest('.comment');
      saveScroll($c.data('comment-id') || '');
    });

    const insertForm = (tplId, data, $target) => {
      const tpl = $(tplId).html();
      if (!tpl) return console.error('Template not found');
      const html = tpl.replace(/__\w+__/g, (m) => data[m] || '');
      $target.after(html);
      $target.parent().find('textarea').focus();
    };

    $(document).on('click', '.reply-button', function() {
      $('.comment-form, .edit-form').remove();
      const $c = $(this).closest('.comment');
      const commentId = $c.data('comment-id');
      const $replies = $c.children('.replies');
      insertForm('#comment-form-template', {
        '__PARENT_ID__': commentId
      }, $replies.length ? $replies : $c);
    });

    $(document).on('click', '.edit-button', function() {
      $('.comment-form, .edit-form').remove();
      const $c = $(this).closest('.comment');
      const commentId = $c.data('comment-id');
      const content = $c.find('.comment-content').data('original-content') || '';
      const $cc = $c.find('.comment-content').first();
      $cc.hide();
      insertForm('#edit-form-template', {
        '__COMMENT_ID__': commentId,
        '__ORIGINAL_CONTENT__': content
      }, $cc);
    });

    $(document).on('click', '.delete-button', function() {
      if (!confirm('Are you sure you want to delete this comment?')) return;
      const $c = $(this).closest('.comment');
      const commentId = $c.data('comment-id');
      saveScroll(commentId);
      const $parent = $c.parents('.comment').first();
      if ($parent.length) ss.setItem('targetCommentId', $parent.data('comment-id'));
      $('<form>', {
        method: 'POST',
        action: `/story/<%= story.username %>/<%= story.vanity %>/chapter/<%= chapter.chapter_num %>/comments/${commentId}/delete`
      }).appendTo('body').submit();
    });

    $(document).on('click', '.cancel-comment, .cancel-edit', function() {
      const $form = $(this).closest('.comment-form, .edit-form');
      if ($form.hasClass('edit-form')) {
        $form.siblings('.comment-content').show();
      }
      $form.remove();
    });
  });
</script>